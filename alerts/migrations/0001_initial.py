# Generated by Django 3.2.7 on 2024-06-12 22:50

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('disease', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Formula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('constants', models.JSONField()),
                ('expression', models.TextField(max_length=1000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MathModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Insira o nome do modelo matemático', max_length=100, verbose_name='Nome do modelo matemático')),
                ('source_code', models.TextField(help_text='Variaveis disponiveis no momento: t = Temperatura rh = Umidade Relativa</h4>', max_length=1000)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='disease.disease', verbose_name='Doença')),
            ],
            options={
                'verbose_name': 'Modelo matemático',
                'verbose_name_plural': 'Modelos matemáticos',
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Sensor',
                'verbose_name_plural': 'Sensores',
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.CharField(max_length=20, verbose_name='Identificador da estação')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('alias', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome')),
                ('lat_coordinate', models.FloatField(null=True, verbose_name='Latitude')),
                ('lon_coordinate', models.FloatField(null=True, verbose_name='Longitude')),
                ('description', models.TextField(help_text='Endereço, ponto de referência, responsável...', max_length=400, null=True, verbose_name='Descrição da estação')),
            ],
            options={
                'verbose_name': 'Estação',
                'verbose_name_plural': 'Estações',
            },
        ),
        migrations.CreateModel(
            name='TypeSensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('metric', models.CharField(choices=[('mm', 'Milímetros'), ('C', 'Graus ºC'), ('CS', 'Graus ºC Solo'), ('bool', 'Sensor Humano'), ('ur', 'Umidade Relativa %'), ('%', 'Umidade % (depreciado)'), ('wm2', 'Wm2'), ('K', 'Graus ºK'), ('m/s', 'm/s (depreciado)'), ('m_s', 'm/s'), ('mbar', 'Milibares'), ('v', 'Volts'), ('pct', 'Porcentagem')], max_length=10)),
            ],
            options={
                'verbose_name': 'Tipo de Sensor',
                'verbose_name_plural': 'Tipos de Sensores',
            },
        ),
        migrations.CreateModel(
            name='SensorInMathModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('divider', models.BooleanField(verbose_name='Usar como um divisor?')),
                ('mathmodel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='alerts.mathmodel', verbose_name='Modelo matemático')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='alerts.sensor', verbose_name='Sensor')),
            ],
            options={
                'verbose_name': 'Sensor no modelo matematico',
                'verbose_name_plural': 'Sensores nos modelos matematicos',
            },
        ),
        migrations.AddField(
            model_name='sensor',
            name='station',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='alerts.station', verbose_name='Estação'),
        ),
        migrations.AddField(
            model_name='sensor',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='alerts.typesensor', verbose_name='Tipo do sensor'),
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome')),
                ('value', models.FloatField(verbose_name='Valor')),
                ('relational', models.CharField(blank=True, choices=[('>', 'Maior que'), ('<', 'Menor que'), ('>=', 'Maior ou igual que'), ('<=', 'Menor ou igual que'), ('==', 'Igual que'), ('!=', 'Diferente que')], max_length=10)),
                ('math_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='alerts.mathmodel', verbose_name='Modelo matematico')),
                ('requires', models.ManyToManyField(blank=True, to='alerts.Requirement')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='alerts.sensor')),
            ],
            options={
                'verbose_name': 'Requisito',
                'verbose_name_plural': 'Requisitos',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, verbose_name='Valor')),
                ('value_new', models.FloatField(null=True, verbose_name='Valor')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='alerts.sensor', verbose_name='Sensor')),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'ordering': ['time'],
            },
        ),
        migrations.CreateModel(
            name='MathModelResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(verbose_name='Valor')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('mathmodel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='alerts.mathmodel', verbose_name='Modelo matematico')),
            ],
            options={
                'verbose_name': 'Resultado de modelo matematico',
                'verbose_name_plural': 'Resultado dos modelos matematicos',
                'ordering': ['date'],
            },
        ),
        migrations.AddField(
            model_name='mathmodel',
            name='stations',
            field=models.ManyToManyField(blank=True, null=True, to='alerts.Station', verbose_name='Estaçôes atreladas'),
        ),
        migrations.CreateModel(
            name='Constant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('value', models.FloatField(verbose_name='Valor')),
                ('mathmodel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='alerts.mathmodel')),
            ],
            options={
                'verbose_name': 'Constante',
                'verbose_name_plural': 'Constantes',
                'managed': True,
            },
        ),
    ]
